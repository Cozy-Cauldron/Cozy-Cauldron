Weekly Updates and all non-logged tasks (not reflected in this repo) go here with name, date(s) of work, and a short description of the task.
https://docs.google.com/spreadsheets/d/1wOi2Wld8tSl0mfLUhtkj4WHKIg5I0IEFp19wl3439Ic/edit?gid=0#gid=0
-------------------------3/8 - 3/14----------------------------
Weekly Team Meeting: 3/14- All members attended and worked on the pre-alpha report.

Emilie Doan
3/10
Unity setup on personal machine
Completed a beginner 2d Unity tutorial to learn the basics of Unity found here: https://www.youtube.com/watch?v=XtQMytORBmM&t=220s 
3/11 - 3/12
Worked on a beginner 3d Unity tutorial to learn more about applicable skills in Unity : https://learn.unity.com/project/john-lemon-s-haunted-jaunt-3d-beginner?uv=2020.3
3/12 - 3/13
Project setup, github integrations, scene and character.

Phillip Somchanhmavong
3/12 ~ 2 hours
Drafted up skeleton report for Pre-Alpha Build and adjusting GitHub repository rulesets involving branches.
3/13 ~ 6 hours
Looking into Magic Wand GitHub documentations/code to try and retool it for our hardware/how to connect it.
3/13 ~ 1 hour
Setting up rough skeleton of hardware concept foundations to form for pre-alpha.
3/14 ~ 5 hours
Drafting up prototypes of hardware component class headers/cpp files for PreAlpha.

Kylie Lennon
3/8
Watched Unity tutorials on how the program is structured and basic functionalities.
3/11
Installed unity and completed a basic 3D tutorial on setting up in game objects.
3/13
Completed object intractability, open/close inventory, put item into inventory functionality, item slot selection in inventory, and item information population on the right side of the inventory.

Ryan Weisse
3/10
TensorFlow research and setup.
3/11
Basic gesture database is implemented, which has only been populated with “dummy” data. This data serves as a placeholder for the gesture data until we collect testing data with the controller when we begin programming the gestures we want.
3/12
The gesture recognition logic has been integrated, which compares the user-parsed data with the database of pre-coded gestures. Connecting this logic with TensorFlow is the next planned step.
3/14
User-parsed data passes through a basic filter that checks if the data “is real”. The filter eliminates data sets that are composed of strictly 0x00 or strictly 0xff, which indicates the data was collected incorrectly.

M Vargo
3/10
Reading more documentation and relevant examples (for I2C, USB, etc.) for Pico W board and IMU.
3/11
Downloaded firmware for Pico board, followed "getting started" guide for the Pico W, and initialized necessary SDK/submodules.
3/13 - 3/14
Soldered header pins to the Pico board and IMU. Read pinouts and connected necessary pins on a breadboard to enable I2C communication.
3/14
Got the Pico to connect correctly and run some examples.

-------------------------------3/15 - 3/21-------------------------------------
Spring Break

-------------------------------3/22 - 3/28-------------------------------------
Kylie Lennon
3/24
Implemented item stacking in the inventory.

Ryan Weisse
3/26
Began work on MSU -> I2C conversion 
3/28
Finalized MSU -> I2C conversion, ready for use, committed to github

Emilie Doan
Started modeling new character model (was eventually scrapped)

M Vargo
3/26
Confirmed IMU was outputting data by probing pins directly
-------------------------------3/29 - 4/4--------------------------------------
Kylie Lennon
4/1 
Workstaion panels and logic for turning it on an off

Ryan Weisse
4/3
Began work on serial -> csv conversion

Emilie Doan 
New character model + scene switching tests 

M Vargo
Began changing code to use SPI to display IMU output (had to roll back)
-------------------------------4/5 - 4/11--------------------------------------
Ryan Weisse 
4/8
TensorFlow Model training, using dummy values to train datasets
4/9
Experimented with different feature numbers and dataset size for example datasets online
4/11
Finalized serial -> csv conversion, ready for use, committed to github

Kylie Lennon
4/8
Group meeting, discussed hardware and ordered buttons and switches
4/10
Group meeting, discussed hardware and continued working on workstation UI
4/11
Finished navigation between slots for inventory and workstation.

Emilie Doan 
4/8
Group meeting, discussed hardware
4/10
Group meeting, discussed hardware and continued working on Scene switching and experimenting in my test scene

M Vargo
4/8
Group meeting, discussed hardware; reinstalled dependencies and started a full rebuild
4/10
Rewired Pico and IMU to different board to fit GPIO components, fixed connection to pull-up resistors
Finished final rebuild and got the IMU serial data to display on PC

Phillip S.
4/10 ~ 4 hours
Looked into joystick components, using documentations for both to pick one (GPIO) for the prototype build 
4/10 ~ 2 hours
Looked into Pico HID connection options for the controller to interact with Software's Unity in the future

-------------------------------4/12 - 4/19-------------------------------------
Kylie Lennon
4/15
Dropped off buttons and joystick
4/16
Started implementing transferring items between inventory and workstation slots.
4/17
Finished implementing transferring items, submit button logic, and added logic for valid crafting recipes.

Emilie Doan 
Finalized (for now) new character model 
Created custom blender animations for this new model 
Integrated new model into the unity project and setup scene transitioning and systems for demoability.

M Vargo 
4/15
Picked up buttons and joystick, started looking at implementation while using temporary ones
4/18
Implemented some GPIO functionality (button press)

Ryan Weisse
4/16
Wrote program for generating "dummy" data for labeled gestures
Wrote program to generate 'dummy' training data (user inputted)
4/17
Made progress on feature comparison between training and testing data
4/18
Working feature comparison, ML can detect the correct gesture that has been loaded :D

Phillip S.
4/14 ~ 2 hours
Looked into Pico's C++ SDKs (specifically ADCs/GPIOs) and further into hardware components schematics for planning Driver code
4/14~4/15 ~ 4 hours
Coded Joystick/Button drivers+connections in C++, using placeholder pin values & Pico Projects, committed to personal test branch

-------------------------------8/25 - 8/31-------------------------------------
Kylie
8/26
Group Meeting: Dividing up work and planning next steps
8/28
Outside House Model
8/31
Inside House Model

Ryan
8/31
Begin work on improved sampling program
-------------------------------9/1 - 9/7-------------------------------------
Kylie
9/2
Crafting Minigame Logic and UI
9/3
Meeting with Stakeholder
9/4
Cutting Board and Mortar and Pestle Models
9/7
Group Meeting
Set up the Inside House Scene with portal logic
Created Fishing Area Model and added colliders
ML to Unity keystroke script
Created Potion Sprites

Emilie Doan 
9/1-2 
additional animations, update player model, update in game controllers, bug fixing
9/3
Meeting with Stakeholder
9/7
Group Meeting, misc work on models and planning

Ryan Weisse
9/1
work on improving sampling program
9/2
improved sampling program done
9/4
research on most viable pipeline systems
9/5
experimented with rest api for pipeline (failed)
9/7
developed ml->unity pipeline using keyboard package

Phillip S.
9/3
  Meeting with Stakeholder
9/4
  Cataloguing Pico controller HID sources to use for further research
9/5~8
  Work on Alpha Build Report & Test Plan
  
-------------------------------9/8 - 9/14-------------------------------------
Kylie
9/9
Made models and sprites of ingredients for the water-breathing potion.
Implemented crafting logic for water-breathing potion
Added another workstation slot and updated inventory navigation logic accordingly
9/10
Work on Alpha Build Report and Alpha Test Plan

Emilie Doan
9/9
Instructor Meeting, in-class planning
9/10
Work on Alpha Build Report and Alpha Test Plan

Ryan
9/9
packaged classifier into joblib, which allows for efficient hardware->ml pipeline

9/10
finalized controller->ml pipeline, using pyserial and buffer

Phillip S.
9/8~10
  Work on Alpha Build Report & Test Plan
9/9
  Meeting with Instructor
  Research begins on 3D printing the controller casing
9/10
  Group meeting for Alpha Build submission

-------------------------------9/15 - 9/21-------------------------------------

-------------------------------9/22 - 9/28-------------------------------------

-------------------------------9/29 - 10/5-------------------------------------






